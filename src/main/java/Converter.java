/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**                                                                                                                                                                                                                                                                                                                                                                              +
 * 
 *
 * @author Cuong Phan
 */
//import java.awt.KeyEventDispatcher;
//import java.awt.event.KeyEvent;
import java.text.DecimalFormat;



public class Converter extends javax.swing.JFrame {

    /**
     * Creates new form Unit
     */
    public Converter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        unitSelection = new javax.swing.ButtonGroup();
        systemSelection = new javax.swing.ButtonGroup();
        rdCelsius = new javax.swing.JRadioButton();
        rdFahrenheit = new javax.swing.JRadioButton();
        rdKelvin = new javax.swing.JRadioButton();
        OutputField = new javax.swing.JTextField();
        btnCE = new javax.swing.JButton();
        btnBackspace = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnDot = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnInvert = new javax.swing.JButton();
        lblTempResult = new javax.swing.JLabel();
        rdHex = new javax.swing.JRadioButton();
        rdDec = new javax.swing.JRadioButton();
        rdOct = new javax.swing.JRadioButton();
        rdBin = new javax.swing.JRadioButton();
        lblNumberingResult3 = new javax.swing.JLabel();
        lblNumberingResult1 = new javax.swing.JLabel();
        lblNumberingResult2 = new javax.swing.JLabel();
        lblNumberingResult4 = new javax.swing.JLabel();
        btnA = new javax.swing.JButton();
        btnB = new javax.swing.JButton();
        btnD = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        btnF = new javax.swing.JButton();
        btnC = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unit Converter - Cuong Phan");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(2000, 500));

        unitSelection.add(rdCelsius);
        rdCelsius.setText("Celsius");
        rdCelsius.setActionCommand("radioCelcius");
        rdCelsius.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rdCelsius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdCelsiusActionPerformed(evt);
            }
        });

        unitSelection.add(rdFahrenheit);
        rdFahrenheit.setText("Fahrenheit");
        rdFahrenheit.setActionCommand("radioFahrenheit");
        rdFahrenheit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdFahrenheitActionPerformed(evt);
            }
        });

        unitSelection.add(rdKelvin);
        rdKelvin.setText("Kelvin");
        rdKelvin.setActionCommand("radioKelvin");
        rdKelvin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdKelvinActionPerformed(evt);
            }
        });

        OutputField.setEditable(false);
        OutputField.setBackground(new java.awt.Color(255, 255, 255));
        OutputField.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        OutputField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        OutputField.setText("0");

        btnCE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCE.setText("CE");
        btnCE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCEActionPerformed(evt);
            }
        });

        btnBackspace.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBackspace.setText("←");
        btnBackspace.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackspaceActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn9.setText("9");
        btn9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn7.setText("7");
        btn7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn8.setText("8");
        btn8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn4.setText("4");
        btn4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn5.setText("5");
        btn5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn6.setText("6");
        btn6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn1.setText("1");
        btn1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn2.setText("2");
        btn2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn3.setText("3");
        btn3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btnDot.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDot.setText(".");
        btnDot.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn0.setText("0");
        btn0.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnInvert.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnInvert.setText("±");
        btnInvert.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnInvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInvertActionPerformed(evt);
            }
        });

        systemSelection.add(rdHex);
        rdHex.setText("HEX");
        rdHex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdHexActionPerformed(evt);
            }
        });

        systemSelection.add(rdDec);
        rdDec.setText("DEC");
        rdDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdDecActionPerformed(evt);
            }
        });

        systemSelection.add(rdOct);
        rdOct.setText("OCT");
        rdOct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdOctActionPerformed(evt);
            }
        });

        systemSelection.add(rdBin);
        rdBin.setText("BIN");
        rdBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBinActionPerformed(evt);
            }
        });

        lblNumberingResult3.setText(" ");

        lblNumberingResult1.setText(" ");

        lblNumberingResult2.setText(" ");

        lblNumberingResult4.setText(" ");

        btnA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnA.setText("A");
        btnA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        btnB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnB.setText("B");
        btnB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });

        btnD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnD.setText("D");
        btnD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        btnE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnE.setText("E");
        btnE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });

        btnF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnF.setText("F");
        btnF.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnC.setText("C");
        btnC.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OutputField)
                            .addComponent(lblNumberingResult1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNumberingResult4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNumberingResult3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNumberingResult2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdHex)
                                .addGap(61, 61, 61)
                                .addComponent(rdDec)
                                .addGap(67, 67, 67)
                                .addComponent(rdOct))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTempResult, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdFahrenheit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                .addComponent(rdCelsius)
                                .addGap(65, 65, 65)
                                .addComponent(rdKelvin)))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnInvert, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(rdBin))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnF, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnE, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {rdCelsius, rdFahrenheit, rdKelvin});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(OutputField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdCelsius)
                    .addComponent(rdFahrenheit)
                    .addComponent(rdKelvin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTempResult, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdHex)
                    .addComponent(rdDec)
                    .addComponent(rdOct)
                    .addComponent(rdBin))
                .addGap(18, 18, 18)
                .addComponent(lblNumberingResult1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberingResult2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNumberingResult3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblNumberingResult4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnInvert, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(btnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(btnE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(btnF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Method for button "1"
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "1" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 1
                OutputField.setText("1");
        } else{
            //If not just add number 1 into the OutputField
            OutputField.setText(OutputField.getText() + "1");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "1");
        } 
        
        
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "2" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 2
                OutputField.setText("2");
        } else{
            //If not just add number 2 into the OutputField
            OutputField.setText(OutputField.getText() + "2");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "2");
        }   
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "3" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 3
                OutputField.setText("3");
        } else{
            //If not just add number 3 into the OutputField
            OutputField.setText(OutputField.getText() + "3");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "3");
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "4" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 4
                OutputField.setText("4");
        } else{
            //If not just add number 4 into the OutputField
            OutputField.setText(OutputField.getText() + "4");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "4");
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "5" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 5
                OutputField.setText("5");
        } else{
            //If not just add number 1 into the OutputField
            OutputField.setText(OutputField.getText() + "5");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "5");
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "6" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 6
                OutputField.setText("6");
        } else{
            //If not just add number 6 into the OutputField
            OutputField.setText(OutputField.getText() + "6");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "6");
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "7" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 7
                OutputField.setText("7");
        } else{
            //If not just add number 7 into the OutputField
            OutputField.setText(OutputField.getText() + "71");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "7");
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "8" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 8
                OutputField.setText("8");
        } else{
            //If not just add number 8 into the OutputField
            OutputField.setText(OutputField.getText() + "8");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "8");
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        //trying to parse the Output field into a double, if it failed - which means the value is a HEX - then proceed to add a "9" into the field
        try {
            //Get the value inside of the OutputField
            double input = Double.parseDouble(OutputField.getText());
            //Doing a check as if the input is a default 0 or not
            if (input==0){
                //If so set the input to 9
                OutputField.setText("9");
        } else{
            //If not just add number 9 into the OutputField
            OutputField.setText(OutputField.getText() + "9");
        }    
        } catch (NumberFormatException e) {
            OutputField.setText(OutputField.getText() + "9");
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCEActionPerformed
        OutputField.setText("0");
        lblTempResult.setText(" ");
        lblNumberingResult1.setText(" ");
        lblNumberingResult2.setText(" ");
        lblNumberingResult3.setText(" ");
        lblNumberingResult4.setText(" ");
    }//GEN-LAST:event_btnCEActionPerformed

    private void btnBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackspaceActionPerformed
        int inputLength = OutputField.getText().length();
        StringBuilder strBuffer = new StringBuilder(OutputField.getText());
        strBuffer.deleteCharAt(inputLength-1);
        String newInput = strBuffer.toString();
        OutputField.setText(newInput);
    }//GEN-LAST:event_btnBackspaceActionPerformed

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        //Try to get the value inside of the OutputField
        try {
            double input = Double.parseDouble(OutputField.getText());
        //Doing a check as if the input is a default 0 or not
        if (input==0){
            //doing nothing becuase it's doesn't make any sense for adding another 0 digit after a 0
        } else{
            //If not just add number 1 into the OutputField
            OutputField.setText(OutputField.getText() + "0");
        }
        } catch (NumberFormatException e){
            OutputField.setText(OutputField.getText() + "0");
        }
    }//GEN-LAST:event_btn0ActionPerformed

    private void btnDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotActionPerformed
        //Get the value inside of the OutputField
        double input = Double.parseDouble(OutputField.getText());
        //Check whether the input is a floating point or not
        if ((input%1) == 0){
            //if so put a dot into the OutputField, otherwise do nothing
            OutputField.setText(OutputField.getText() + ".");
        }
    }//GEN-LAST:event_btnDotActionPerformed

    private void btnInvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInvertActionPerformed
        //Get the value inside of the OutputField
        double input = Double.parseDouble(OutputField.getText());
        //Check whether that value is positive or not
        if (input>0){
            //If so then add a minus sign
            OutputField.setText("-" + OutputField.getText());
        }
        else {
            //if the value is negative already then remove the minus sign
            StringBuilder strBuffer = new StringBuilder(OutputField.getText());
            strBuffer.deleteCharAt(0);
            String newInput = strBuffer.toString();
            OutputField.setText(newInput);
        }
    }//GEN-LAST:event_btnInvertActionPerformed
    
    //Method to convert the Fahrenheit input value into Celsius and Kelvin 
    private void rdFahrenheitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdFahrenheitActionPerformed
        
        double input = Double.parseDouble(OutputField.getText());
        double dblOutputCelsius = (input -32)/1.8;        
        double dblOutputKelvin = dblOutputCelsius - 273.15;
        //format the output number
        DecimalFormat pattern = new DecimalFormat("#.##");
        
        String strOutputCelsiusFormatted = pattern.format(dblOutputCelsius);
        String strOutputKelvinFormatted = pattern.format(dblOutputKelvin);
        
        //output the result to the lblTempResult label
        lblTempResult.setText("About equal to " 
                + strOutputCelsiusFormatted + " ºC                        " 
                + strOutputKelvinFormatted + " ºK" );
    }//GEN-LAST:event_rdFahrenheitActionPerformed
   
    //Method to convert the Celsius input value into Fahrenheit and Kelvin 
    private void rdCelsiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdCelsiusActionPerformed
        
        double input = Double.parseDouble(OutputField.getText());
        double dblOutputFahrenhei = (input * 1.8 + 32);        
        double dblOutputKelvin = input + 273.15;
        
        DecimalFormat pattern = new DecimalFormat("#.##");        
                      
        String strOutputFahrenheiFormatted = pattern.format(dblOutputFahrenhei);
        String strOutputKelvinFormatted = pattern.format(dblOutputKelvin);
        
        lblTempResult.setText("About equal to " 
                + strOutputFahrenheiFormatted + " ºF                        " 
                + strOutputKelvinFormatted + " ºK" );
    }//GEN-LAST:event_rdCelsiusActionPerformed

    //Method to convert the Kelvin input value into Fahrenheit and Celsius 
    private void rdKelvinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdKelvinActionPerformed
        
        double input = Double.parseDouble(OutputField.getText());
        double dblOutputFahrenhei = (input -273.15) * 9 / 5 + 32;        
        double dblOutputCelsius = input - 273.15;
        
        DecimalFormat pattern = new DecimalFormat("#.##");        
                      
        String strOutputFahrenheiFormatted = pattern.format(dblOutputFahrenhei);
        String strOutputCelsiusFormatted = pattern.format(dblOutputCelsius);
                
        lblTempResult.setText("About equal to " 
                + strOutputFahrenheiFormatted + " ºF                        " 
                + strOutputCelsiusFormatted + " ºC" );
    }//GEN-LAST:event_rdKelvinActionPerformed
    
    //method to convert from Binary to Decimal
    public static int binToDec(int input)  {
        String strInput = String.valueOf(input);
        //using parseInt method of class String with input and radix of 2 to parse into Decimal
        return Integer.parseInt(strInput,2);
    }
    
    //method to convert from decimal to Binary
    public static long decToBin(int input) {
        //recursive method which calls itself recursively
        if (input>0)
            return (input % 2 + 10 * decToBin(input / 2));
        else return 0;
    }
    
    //method to convert from decimal to hexadecimal /w toHexString method of Integer class
    public static String decToHex(int input)  {
        return Integer.toHexString(input);
    }
    
    //method to convert from hexadecimal to decimal /w Integer.parseInt(input,16)
    public static int hexToDec(String input)  {
        return Integer.parseInt(input,16);
    }
    
    //method to convert decimal to octal using toOctalString method of Integer class
    public static String decToOct(int input)  {
        return Integer.toOctalString(input);
    }
    
    //method to convert octal to decimal using parseInt(input, 8) of Integer class
    public static int octToDec(String input)  {
        return Integer.parseInt(input,8);
    }
    
    //method for radio button Decimal, which will convert the input into hex, oct and binary
    private void rdDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdDecActionPerformed
        //get the value from the output field
        int input = Integer.parseInt(OutputField.getText());
        //convert the input into binary by calling the decToBin method
        long intBinOutput = decToBin(input);
        //convert dec to hex by calling decToHex method
        String strHexOutput = decToHex(input);
        //convert dec to oct by calling the decToOct method
        String strOctOutput = decToOct(input);        
        
        lblNumberingResult1.setText("HEX:  " + strHexOutput);
        lblNumberingResult2.setText("DEC:  " + input);
        lblNumberingResult3.setText("OCT:  " + strOctOutput);
        lblNumberingResult4.setText("BIN:  " + String.valueOf(intBinOutput));
        
    }//GEN-LAST:event_rdDecActionPerformed
    //method for handling the radio bin button
    private void rdBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBinActionPerformed
        int input = Integer.parseInt(OutputField.getText());
        //connvert bin to dec by calling binToDec method, and convert it into a string and stored into strDecOutput variable
        String strDecOutput = String.valueOf(binToDec(input));
        //convert bin to hex by calling converting bin to dec first, and then convert the result into hex by caling binToDec
        String strHexOutput = decToHex(binToDec(input));
        //similar, conver bin to oct by  convert the input into decimal first, and then convert that decimal result in to oct
        String strOctOutput = decToOct(binToDec(input));
        
        lblNumberingResult1.setText("HEX:  " + strHexOutput);
        lblNumberingResult2.setText("DEC:  " + strDecOutput);
        lblNumberingResult3.setText("OCT:  " + strOctOutput);
        lblNumberingResult4.setText("BIN:  " + input);
                
    }//GEN-LAST:event_rdBinActionPerformed

    private void rdHexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdHexActionPerformed
        String input = (OutputField.getText());
        
        long intBinOutput = decToBin(hexToDec(input));
        String strOctOutput = decToOct(hexToDec(input));
        String strDecOutput = String.valueOf(hexToDec(input));        
                
        lblNumberingResult1.setText("HEX:  " + input);
        lblNumberingResult2.setText("DEC:  " + strDecOutput);
        lblNumberingResult3.setText("OCT:  " + strOctOutput);
        lblNumberingResult4.setText("BIN:  " + String.valueOf(intBinOutput));
    }//GEN-LAST:event_rdHexActionPerformed

    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
        OutputField.setText(OutputField.getText() + "A");
    }//GEN-LAST:event_btnAActionPerformed

    private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed
        OutputField.setText(OutputField.getText() + "B");
    }//GEN-LAST:event_btnBActionPerformed

    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        OutputField.setText(OutputField.getText() + "D");
    }//GEN-LAST:event_btnDActionPerformed

    private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
        OutputField.setText(OutputField.getText() + "E");
    }//GEN-LAST:event_btnEActionPerformed

    private void btnFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFActionPerformed
        OutputField.setText(OutputField.getText() + "F");
    }//GEN-LAST:event_btnFActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        OutputField.setText(OutputField.getText() + "C");
    }//GEN-LAST:event_btnCActionPerformed

    private void rdOctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdOctActionPerformed
        String input = (OutputField.getText());
        int intDecOutput = octToDec(input);
        
        String strDecOutput = String.valueOf(intDecOutput);
        String strHexOutput = decToHex(intDecOutput);
        long intBinOutput = decToBin(intDecOutput);
        
        lblNumberingResult1.setText("HEX:  " + strHexOutput);
        lblNumberingResult2.setText("DEC:  " + strDecOutput);
        lblNumberingResult3.setText("OCT:  " + input);
        lblNumberingResult4.setText("BIN:  " + String.valueOf(intBinOutput));
    }//GEN-LAST:event_rdOctActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField OutputField;
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnB;
    private javax.swing.JButton btnBackspace;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnCE;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnDot;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnF;
    private javax.swing.JButton btnInvert;
    private javax.swing.JLabel lblNumberingResult1;
    private javax.swing.JLabel lblNumberingResult2;
    private javax.swing.JLabel lblNumberingResult3;
    private javax.swing.JLabel lblNumberingResult4;
    private javax.swing.JLabel lblTempResult;
    private javax.swing.JRadioButton rdBin;
    private javax.swing.JRadioButton rdCelsius;
    private javax.swing.JRadioButton rdDec;
    private javax.swing.JRadioButton rdFahrenheit;
    private javax.swing.JRadioButton rdHex;
    private javax.swing.JRadioButton rdKelvin;
    private javax.swing.JRadioButton rdOct;
    private javax.swing.ButtonGroup systemSelection;
    private javax.swing.ButtonGroup unitSelection;
    // End of variables declaration//GEN-END:variables
}